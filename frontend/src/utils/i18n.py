"""
Internationalization (i18n) support for the application
"""

from typing import Dict, Any
from .config import LANGUAGES

class I18n:
    """Internationalization manager"""
    
    def __init__(self, language: str = "en"):
        self.language = language
        self.translations = self._load_translations()
    
    def _load_translations(self) -> Dict[str, Dict[str, str]]:
        """Load translations for all supported languages"""
        return {
            "en": {
                # Main window
                "app_title": "Multi Driver V1.0.0",
                "connected": "Connected",
                "disconnected": "Disconnected",
                
                # Sidebar
                "accounts": "Accounts",
                "add_account": "+ Add Account",
                "type": "Type",
                "status": "Status",
                "last_sync": "Last sync",
                "idle": "Idle",
                "crawling": "Crawling",
                "syncing": "Syncing",
                "error": "Error",
                "oauth": "OAuth",
                "service_account": "Service Account",
                
                # Toolbar
                "search": "Search",
                "advanced": "Advanced",
                "account": "Account",
                "all_accounts": "All Accounts",
                "file_type": "File Type",
                "all_types": "All Types",
                "size": "Size",
                "min": "Min",
                "max": "Max",
                "modified_date": "Modified Date",
                "from": "From",
                "to": "To",
                "other": "Other",
                "include_trashed": "Include Trashed",
                "include_shortcuts": "Include Shortcuts",
                "clear_filters": "Clear Filters",
                
                # Tabs
                "search_results": "Search Results",
                "reports": "Reports",
                
                # Search results
                "no_search_performed": "No search performed",
                "export_results": "Export Results",
                "name": "Name",
                "type": "Type",
                "size": "Size",
                "modified": "Modified",
                "owner": "Owner",
                "path": "Path",
                "actions": "Actions",
                
                # Pagination
                "previous": "‚Üê Previous",
                "next": "Next ‚Üí",
                "page": "Page",
                "of": "of",
                
                # Status bar
                "files": "Files",
                "size": "Size",
                
                # Actions
                "open": "Open",
                "download": "Download",
                "copy_link": "Copy Link",
                "share": "Share",
                "delete": "Delete",
                "move": "Move",
                "rename": "Rename",
                
                # Messages
                "search_found": "Found {count} files for '{query}'",
                "sync_started": "Sync started for {account}",
                "sync_completed": "Sync completed for {account}",
                "sync_failed": "Sync failed for {account}",
                "account_connected": "Account {email} connected successfully",
                "account_disconnected": "Account {email} disconnected",
                
                # Errors
                "connection_failed": "Connection failed",
                "search_failed": "Search failed",
                "sync_failed": "Sync failed",
                "unknown_error": "Unknown error occurred",
                
                # File types
                "folder": "Folder",
                "document": "Document",
                "spreadsheet": "Spreadsheet",
                "presentation": "Presentation",
                "image": "Image",
                "video": "Video",
                "audio": "Audio",
                "archive": "Archive",
                "other": "Other",
                
                # Settings
                "settings": "Settings",
                "language": "Language",
                "theme": "Theme",
                "appearance": "Appearance",
                "notifications": "Notifications",
                "auto_refresh": "Auto-refresh",
                "search_history": "Search History",
                "favorites": "Favorites",
                "about": "About",
                
                # Account details
                "account_details": "Account Details",
                "select_account_details": "Select an account to view details",
                "initial_sync": "Initial Sync",
                "incremental_sync": "Incremental Sync",
                
                # Reports
                "storage_usage": "Storage Usage",
                "file_types": "File Types",
                "sync_status": "Sync Status",
                "activity_log": "Activity Log",
                
                # Themes
                "dark": "Dark",
                "light": "Light",
                "midnight": "Midnight",
                "ocean": "Ocean",
                
                # Common
                "yes": "Yes",
                "no": "No",
                "cancel": "Cancel",
                "ok": "OK",
                "save": "Save",
                "close": "Close",
                "refresh": "Refresh",
                "loading": "Loading...",
                "no_results": "No results found",
                "select_all": "Select All",
                "deselect_all": "Deselect All"
            },
            "vi": {
                # Main window
                "app_title": "üöÄ Multi Driver ‚ô•Ô∏è",
                "connected": "ƒê√£ k·∫øt n·ªëi",
                "disconnected": "M·∫•t k·∫øt n·ªëi",
                
                # Sidebar
                "accounts": "T√†i kho·∫£n",
                "add_account": "+ Th√™m t√†i kho·∫£n",
                "type": "Lo·∫°i",
                "status": "Tr·∫°ng th√°i",
                "last_sync": "ƒê·ªìng b·ªô cu·ªëi",
                "idle": "Ch·ªù",
                "crawling": "ƒêang qu√©t",
                "syncing": "ƒêang ƒë·ªìng b·ªô",
                "error": "L·ªói",
                "oauth": "OAuth",
                "service_account": "T√†i kho·∫£n d·ªãch v·ª•",
                
                # Toolbar
                "search": "T√¨m ki·∫øm",
                "advanced": "N√¢ng cao",
                "account": "T√†i kho·∫£n",
                "all_accounts": "T·∫•t c·∫£ t√†i kho·∫£n",
                "file_type": "Lo·∫°i file",
                "all_types": "T·∫•t c·∫£ lo·∫°i",
                "size": "K√≠ch th∆∞·ªõc",
                "min": "T·ªëi thi·ªÉu",
                "max": "T·ªëi ƒëa",
                "modified_date": "Ng√†y s·ª≠a ƒë·ªïi",
                "from": "T·ª´",
                "to": "ƒê·∫øn",
                "other": "Kh√°c",
                "include_trashed": "Bao g·ªìm th√πng r√°c",
                "include_shortcuts": "Bao g·ªìm l·ªëi t·∫Øt",
                "clear_filters": "X√≥a b·ªô l·ªçc",
                
                # Tabs
                "search_results": "K·∫øt qu·∫£ t√¨m ki·∫øm",
                "reports": "B√°o c√°o",
                
                # Search results
                "no_search_performed": "Ch∆∞a th·ª±c hi·ªán t√¨m ki·∫øm",
                "export_results": "Xu·∫•t k·∫øt qu·∫£",
                "name": "T√™n",
                "type": "Lo·∫°i",
                "size": "K√≠ch th∆∞·ªõc",
                "modified": "S·ª≠a ƒë·ªïi",
                "owner": "Ch·ªß s·ªü h·ªØu",
                "path": "ƒê∆∞·ªùng d·∫´n",
                "actions": "H√†nh ƒë·ªông",
                
                # Pagination
                "previous": "‚Üê Tr∆∞·ªõc",
                "next": "Ti·∫øp ‚Üí",
                "page": "Trang",
                "of": "tr√™n",
                
                # Status bar
                "files": "T·ªáp tin",
                "size": "K√≠ch th∆∞·ªõc",
                
                # Actions
                "open": "M·ªü",
                "download": "T·∫£i xu·ªëng",
                "copy_link": "Sao ch√©p li√™n k·∫øt",
                "share": "Chia s·∫ª",
                "delete": "X√≥a",
                "move": "Di chuy·ªÉn",
                "rename": "ƒê·ªïi t√™n",
                
                # Messages
                "search_found": "T√¨m th·∫•y {count} t·ªáp tin cho '{query}'",
                "sync_started": "B·∫Øt ƒë·∫ßu ƒë·ªìng b·ªô cho {account}",
                "sync_completed": "Ho√†n th√†nh ƒë·ªìng b·ªô cho {account}",
                "sync_failed": "ƒê·ªìng b·ªô th·∫•t b·∫°i cho {account}",
                "account_connected": "T√†i kho·∫£n {email} ƒë√£ k·∫øt n·ªëi th√†nh c√¥ng",
                "account_disconnected": "T√†i kho·∫£n {email} ƒë√£ ng·∫Øt k·∫øt n·ªëi",
                
                # Errors
                "connection_failed": "K·∫øt n·ªëi th·∫•t b·∫°i",
                "search_failed": "T√¨m ki·∫øm th·∫•t b·∫°i",
                "sync_failed": "ƒê·ªìng b·ªô th·∫•t b·∫°i",
                "unknown_error": "ƒê√£ x·∫£y ra l·ªói kh√¥ng x√°c ƒë·ªãnh",
                
                # File types
                "folder": "Th∆∞ m·ª•c",
                "document": "T√†i li·ªáu",
                "spreadsheet": "B·∫£ng t√≠nh",
                "presentation": "Tr√¨nh b√†y",
                "image": "H√¨nh ·∫£nh",
                "video": "Video",
                "audio": "√Çm thanh",
                "archive": "L∆∞u tr·ªØ",
                "other": "Kh√°c",
                
                # Settings
                "settings": "C√†i ƒë·∫∑t",
                "language": "Ng√¥n ng·ªØ",
                "theme": "Giao di·ªán",
                "appearance": "Giao di·ªán",
                "notifications": "Th√¥ng b√°o",
                "auto_refresh": "T·ª± ƒë·ªông l√†m m·ªõi",
                "search_history": "L·ªãch s·ª≠ t√¨m ki·∫øm",
                "favorites": "Y√™u th√≠ch",
                "about": "Gi·ªõi thi·ªáu",
                
                # Account details
                "account_details": "Chi ti·∫øt t√†i kho·∫£n",
                "select_account_details": "Ch·ªçn m·ªôt t√†i kho·∫£n ƒë·ªÉ xem chi ti·∫øt",
                "initial_sync": "ƒê·ªìng b·ªô ban ƒë·∫ßu",
                "incremental_sync": "ƒê·ªìng b·ªô tƒÉng",
                
                # Reports
                "storage_usage": "S·ª≠ d·ª•ng b·ªô nh·ªõ",
                "file_types": "Lo·∫°i t·ªáp tin",
                "sync_status": "Tr·∫°ng th√°i ƒë·ªìng b·ªô",
                "activity_log": "Nh·∫≠t k√Ω ho·∫°t ƒë·ªông",
                
                # Themes
                "dark": "T·ªëi",
                "light": "S√°ng",
                "midnight": "N·ª≠a ƒë√™m",
                "ocean": "ƒê·∫°i d∆∞∆°ng",
                
                # Common
                "yes": "C√≥",
                "no": "Kh√¥ng",
                "cancel": "H·ªßy",
                "ok": "OK",
                "save": "L∆∞u",
                "close": "ƒê√≥ng",
                "refresh": "L√†m m·ªõi",
                "loading": "ƒêang t·∫£i...",
                "no_results": "Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£",
                "select_all": "Ch·ªçn t·∫•t c·∫£",
                "deselect_all": "B·ªè ch·ªçn t·∫•t c·∫£"
            }
        }
    
    def set_language(self, language: str):
        """Set current language"""
        if language in LANGUAGES:
            self.language = language
    
    def get(self, key: str, **kwargs) -> str:
        """Get translation for key with optional formatting"""
        translation = self.translations.get(self.language, {}).get(key, key)
        
        # Format with kwargs if provided
        if kwargs:
            try:
                translation = translation.format(**kwargs)
            except (KeyError, ValueError):
                pass
        
        return translation
    
    def get_language_name(self, language_code: str) -> str:
        """Get language name in current language"""
        lang = LANGUAGES.get(language_code)
        if lang:
            if self.language == "vi":
                return lang.native_name
            else:
                return lang.name
        return language_code
    
    def get_current_language_info(self) -> Dict[str, Any]:
        """Get current language information"""
        return LANGUAGES.get(self.language, {})
    
    def get_supported_languages(self) -> Dict[str, Dict[str, Any]]:
        """Get all supported languages"""
        return LANGUAGES

# Global i18n instance
i18n = I18n()
